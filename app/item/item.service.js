"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var ItemService = /** @class */ (function () {
    function ItemService() {
        this.jan = new Array({ id: 1, name: "Georgia vs Austin Peay", type: "Game", date: "09/01" }, { id: 3, name: "Labor Day", type: "Holiday", date: "09/03" });
        this.feb = new Array({ id: 1, name: "Georgia vs Austin Peay", type: "Game", date: "09/01" }, { id: 3, name: "Labor Day", type: "Holiday", date: "09/03" });
        this.mar = new Array({ id: 1, name: "Georgia vs Austin Peay", type: "Game", date: "09/01" }, { id: 3, name: "Labor Day", type: "Holiday", date: "09/03" });
        this.apr = new Array({ id: 1, name: "Georgia vs Austin Peay", type: "Game", date: "09/01" }, { id: 3, name: "Labor Day", type: "Holiday", date: "09/03" });
        this.may = new Array({ id: 1, name: "Georgia vs Austin Peay", type: "Game", date: "09/01" }, { id: 3, name: "Labor Day", type: "Holiday", date: "09/03" });
        this.jun = new Array({ id: 1, name: "Georgia vs Austin Peay", type: "Game", date: "09/01" }, { id: 3, name: "Labor Day", type: "Holiday", date: "09/03" });
        this.jul = new Array({ id: 1, name: "Georgia vs Austin Peay", type: "Game", date: "09/01" }, { id: 3, name: "Labor Day", type: "Holiday", date: "09/03" });
        this.aug = new Array({ id: 1, name: "Georgia vs Austin Peay", type: "Game", date: "09/01" }, { id: 3, name: "Labor Day", type: "Holiday", date: "09/03" });
        this.sept = new Array({ id: 1, name: "Georgia vs Austin Peay", type: "Game", date: "09/01" }, { id: 3, name: "Labor Day", type: "Holiday", date: "09/03" }, { id: 4, name: "National Wildlife Day", type: "Event", date: "09/04" }, { id: 5, name: "Taste of Athens", type: "Event", date: "09/04" }, { id: 6, name: "Spiderman", type: "Movie", date: "09/06" }, { id: 7, name: "Georgia at South Carolina", type: "Game", date: "09/08" }, { id: 8, name: "Deadpool", type: "Movie", date: "09/13" }, { id: 9, name: "UGA Night at the Braves", type: "Event", date: "09/14" }, { id: 10, name: "Georgia vs Middle Tennessee State", type: "Game", date: "09/15" }, { id: 11, name: "Dawgs After Dark", type: "Event", date: "09/14" }, { id: 12, name: "Georgia at Missouri", type: "Game", date: "09/22" }, { id: 13, name: "Movie Trivia Night", type: "Event", date: "09/25" }, { id: 14, name: "Pizza & Politics", type: "Event", date: "09/26" }, { id: 17, name: "Drive in Movie: Lilo and Stitch", type: "Movie", date: "09/27" }, { id: 18, name: "Street Paint Competition", type: "Event", date: "09/28" }, { id: 19, name: "Georgia vs Tennessee", type: "Game", date: "09/29" });
        this.oct = new Array({ id: 1, name: "Georgia vs Austin Peay", type: "Game", date: "09/01" }, { id: 3, name: "Labor Day", type: "Holiday", date: "09/03" });
        this.nov = new Array({ id: 1, name: "Georgia vs Austin Peay", type: "Game", date: "09/01" }, { id: 3, name: "Labor Day", type: "Holiday", date: "09/03" });
        this.dec = new Array({ id: 1, name: "Georgia vs Austin Peay", type: "Game", date: "09/01" }, { id: 3, name: "Labor Day", type: "Holiday", date: "09/03" });
        this.months = [
            this.jan,
            this.feb,
            this.mar,
            this.apr,
            this.may,
            this.jun,
            this.jul,
            this.aug,
            this.sept,
            this.oct,
            this.nov,
            this.dec
        ];
    }
    ItemService.prototype.getItems = function (id) {
        return this.months[id];
    };
    ItemService.prototype.getItem = function (month, id) {
        return this.months[month].filter(function (item) { return item.id === id; })[0];
    };
    ItemService = __decorate([
        core_1.Injectable()
    ], ItemService);
    return ItemService;
}());
exports.ItemService = ItemService;
//# sourceMappingURL=data:application/json;base64,